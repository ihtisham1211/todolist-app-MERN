[{"/home/ihtisham/PycharmProjects/test/src/index.js":"1","/home/ihtisham/PycharmProjects/test/src/App.js":"2","/home/ihtisham/PycharmProjects/test/src/store.js":"3","/home/ihtisham/PycharmProjects/test/src/reducers/index.js":"4","/home/ihtisham/PycharmProjects/test/src/components/Body.jsx":"5","/home/ihtisham/PycharmProjects/test/src/components/Date.jsx":"6","/home/ihtisham/PycharmProjects/test/src/components/List.jsx":"7","/home/ihtisham/PycharmProjects/test/src/components/Boxes.jsx":"8","/home/ihtisham/PycharmProjects/test/src/actions/auth.js":"9","/home/ihtisham/PycharmProjects/test/src/actions/alert.js":"10","/home/ihtisham/PycharmProjects/test/src/actions/types.js":"11","/home/ihtisham/PycharmProjects/test/src/utils/setAuthToken.js":"12","/home/ihtisham/PycharmProjects/test/src/components/routering/PrivateRoute.js":"13","/home/ihtisham/PycharmProjects/test/src/components/Login.jsx":"14","/home/ihtisham/PycharmProjects/test/src/reducers/alert.js":"15","/home/ihtisham/PycharmProjects/test/src/reducers/auth.js":"16","/home/ihtisham/PycharmProjects/test/src/reducers/user.js":"17","/home/ihtisham/PycharmProjects/test/src/components/Register.jsx":"18","/home/ihtisham/PycharmProjects/test/src/actions/user.js":"19","/home/ihtisham/PycharmProjects/test/src/components/routering/Alert.js":"20","/home/ihtisham/PycharmProjects/test/src/reducers/task.js":"21","/home/ihtisham/PycharmProjects/test/src/actions/task.js":"22"},{"size":176,"mtime":1609772454221,"results":"23","hashOfConfig":"24"},{"size":1018,"mtime":1609945984400,"results":"25","hashOfConfig":"24"},{"size":449,"mtime":1608985091000,"results":"26","hashOfConfig":"24"},{"size":235,"mtime":1609933049041,"results":"27","hashOfConfig":"24"},{"size":2778,"mtime":1610035540418,"results":"28","hashOfConfig":"24"},{"size":1697,"mtime":1610030696380,"results":"29","hashOfConfig":"24"},{"size":2565,"mtime":1610030309496,"results":"30","hashOfConfig":"24"},{"size":2578,"mtime":1610030041246,"results":"31","hashOfConfig":"24"},{"size":1382,"mtime":1610009162435,"results":"32","hashOfConfig":"24"},{"size":351,"mtime":1609850920595,"results":"33","hashOfConfig":"24"},{"size":420,"mtime":1609929661467,"results":"34","hashOfConfig":"24"},{"size":253,"mtime":1609850833324,"results":"35","hashOfConfig":"24"},{"size":651,"mtime":1609851531558,"results":"36","hashOfConfig":"24"},{"size":2048,"mtime":1610012832997,"results":"37","hashOfConfig":"24"},{"size":393,"mtime":1609857819797,"results":"38","hashOfConfig":"24"},{"size":1023,"mtime":1609857862325,"results":"39","hashOfConfig":"24"},{"size":573,"mtime":1610028803528,"results":"40","hashOfConfig":"24"},{"size":2246,"mtime":1610029016010,"results":"41","hashOfConfig":"24"},{"size":906,"mtime":1610028818141,"results":"42","hashOfConfig":"24"},{"size":507,"mtime":1609930536538,"results":"43","hashOfConfig":"24"},{"size":520,"mtime":1610034428464,"results":"44","hashOfConfig":"24"},{"size":3993,"mtime":1610026210826,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"p38qeh",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"48"},"/home/ihtisham/PycharmProjects/test/src/index.js",[],["97","98"],"/home/ihtisham/PycharmProjects/test/src/App.js",[],"/home/ihtisham/PycharmProjects/test/src/store.js",[],"/home/ihtisham/PycharmProjects/test/src/reducers/index.js",[],"/home/ihtisham/PycharmProjects/test/src/components/Body.jsx",["99"],"/home/ihtisham/PycharmProjects/test/src/components/Date.jsx",[],"/home/ihtisham/PycharmProjects/test/src/components/List.jsx",["100"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Boxes from \"./Boxes\";\nimport { v4 as uuid } from \"uuid\";\nimport { addTask } from \"../actions/task\";\n\nconst ListBody = styled.div`\n  height: 450px;\n  overflow-x: hidden;\n  scrollbar-width: none;\n`;\n\nconst ButtonBox = styled.div`\n  display: flex;\n  border-bottom: 0.5px solid lightgray;\n  margin: 5px 0px 8px 0px;\n`;\nconst TextBox = styled.input`\n  &::placeholder {\n    color: ${(props) => (props.mode ? \"#ac8eca\" : \"#ac8eca\")};\n  }\n  width: 100%;\n  border: transparent;\n  background-color: ${(props) => (props.mode ? \"#faf8f8\" : \"#322f3d\")};\n  margin-left: 10px;\n`;\nconst AddButton = styled.button`\n  font-size: 40px;\n  border: transparent;\n  color: #ac8eca;\n  background-color: ${(props) => (props.mode ? \"#faf8f8\" : \"#322f3d\")};\n`;\n\nexport class List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: \"\",\n    };\n    this.onChange = this.onChange.bind(this);\n    this.addClick = this.addClick.bind(this);\n  }\n  onChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n  addClick() {\n    this.props.addTask(\n      this.props.userId,\n      this.state.input,\n      \"null\",\n      this.props.token\n    );\n  }\n\n  render() {\n    return (\n      <ListBody>\n        <ButtonBox>\n          <AddButton\n            mode={this.props.theme ? 1 : 0}\n            onClick={(e) => this.addClick(e)}\n          >\n            +\n          </AddButton>\n          <TextBox\n            mode={this.props.theme ? 1 : 0}\n            placeholder=\"Type Your Task\"\n            name=\"input\"\n            value={this.state.input}\n            onChange={(e) => this.onChange(e)}\n          />\n        </ButtonBox>\n        {this.props.taskList === null ? (\n          <span> </span>\n        ) : (\n          this.props.taskList.map((task) => {\n            if (task.user === this.props.userId)\n              return (\n                <Boxes\n                  key={uuid()}\n                  id={task._id}\n                  user={task.user}\n                  title={task.title}\n                  description={task.description}\n                  date={task.date}\n                  status={task.status}\n                />\n              );\n          })\n        )}\n      </ListBody>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  taskList: state.task.taskList,\n  userId: state.task.userId,\n  token: state.auth.token,\n  theme: state.user.theme,\n});\n\nexport default connect(mapStateToProps, { addTask })(List);\n","/home/ihtisham/PycharmProjects/test/src/components/Boxes.jsx",[],"/home/ihtisham/PycharmProjects/test/src/actions/auth.js",[],"/home/ihtisham/PycharmProjects/test/src/actions/alert.js",[],"/home/ihtisham/PycharmProjects/test/src/actions/types.js",[],"/home/ihtisham/PycharmProjects/test/src/utils/setAuthToken.js",[],"/home/ihtisham/PycharmProjects/test/src/components/routering/PrivateRoute.js",[],"/home/ihtisham/PycharmProjects/test/src/components/Login.jsx",[],"/home/ihtisham/PycharmProjects/test/src/reducers/alert.js",["101"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\nconst initialState = [];\r\n\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/home/ihtisham/PycharmProjects/test/src/reducers/auth.js",["102"],"import {\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem(\"token\"),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"token\", payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        usertype: payload.usertype,\r\n      };\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"token\");\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","/home/ihtisham/PycharmProjects/test/src/reducers/user.js",["103"],"const initialState = { created: false, theme: true};\n\nexport default function (state = initialState, action) {\n  const { type } = action;\n  //action has the coming data init\n  switch (type) {\n    case \"CREATED_USER\":\n      return {\n        ...state,\n        created: true,\n      };\n    case \"FAILED_USER\":\n      return {\n        ...state,\n        created: false,\n      };\n    case \"LIGHT\":\n      return {\n        ...state,\n        theme: true,\n      };\n    case \"DARK\":\n      return {\n        ...state,\n        theme: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/src/components/Register.jsx",[],"/home/ihtisham/PycharmProjects/test/src/actions/user.js",["104"],"import axios from \"axios\";\nimport { CREATED_USER, FAILED_USER } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport { login } from \"./auth\";\n\nexport const createUser = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(\"/api/user/add\", body, config);\n    dispatch({\n      type: CREATED_USER,\n    });\n    dispatch(setAlert(\"User Created\", \"success\"));\n    dispatch(login(email, password));\n  } catch (error) {\n    dispatch({\n      type: FAILED_USER,\n    });\n    dispatch(setAlert(\"Failed To Create User\", \"danger\"));\n  }\n};\n\nexport const themeChange = (theme) => async (dispatch) => {\n  if (theme === true) {\n    dispatch({\n      type: \"DARK\",\n    });\n  } else {\n    dispatch({\n      type: \"LIGHT\",\n    });\n  }\n};\n","/home/ihtisham/PycharmProjects/test/src/components/routering/Alert.js",[],"/home/ihtisham/PycharmProjects/test/src/reducers/task.js",["105"],"/home/ihtisham/PycharmProjects/test/src/actions/task.js",["106","107","108","109","110","111"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\n//**********************************\n//***********storeUserId\n//**********************************\nexport const storeUserId = (token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  try {\n    const res = await axios.get(\"/api/auth/\", config);\n    dispatch({\n      type: \"ADD_USER_ID\",\n      payload: res.data._id,\n    });\n    console.log(\"storeUserId\");\n    dispatch(getAllTasks(res.data._id));\n  } catch (e) {\n    dispatch(setAlert(\"Failed To Get UserId\", \"danger\"));\n  }\n};\n//**********************************\n//***********getAllTasks\n//**********************************\nexport const getAllTasks = (userId) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  try {\n    const res = await axios.get(\"/api/task/\", config);\n    let tasks = [];\n    const userTask = res.data.map((task) => {\n      if (task.user === userId) {\n        tasks.push(task);\n      }\n    });\n    dispatch({\n      type: \"GET_All_TASKS\",\n      payload: tasks,\n    });\n    console.log(\"getAllTasks\");\n  } catch (e) {\n    dispatch(setAlert(\"Failed To Get Tasks\", \"danger\"));\n  }\n};\n//**********************************\n//***********addTask\n//**********************************\nexport const addTask = (\n  user,\n  title,\n  description,\n  token,\n  status = \"false\"\n) => async (dispatch) => {\n  var date = new Date();\n  var hours = date.getHours();\n  var minutes = date.getMinutes();\n  var newformat = hours >= 12 ? \"PM\" : \"AM\";\n  hours = hours % 12;\n  hours = hours ? hours : 12;\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  var date1 = date.getDate();\n  var month = date.getMonth();\n  var year = date.getFullYear();\n  var mL = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n  var monthDateYear = date1 + \" \" + mL[month] + \" \" + year;\n  var date = hours + \":\" + minutes + \" \" + newformat + \"|\" + monthDateYear;\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ title, date, description, status });\n  try {\n    const res = await axios.post(\"/api/task/add\", body, config);\n\n    dispatch(getAllTasks(user));\n    console.log(\"addTask\");\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Add Task\", \"danger\"));\n  }\n};\n//**********************************\n//***********clearList\n//**********************************\nexport const clearList = (taskList, token) => async (dispatch) => {\n  for (var i = 0; i < taskList.length; i++) {\n    dispatch(deleteTask(token, taskList[i]._id, taskList[i].user));\n  }\n  console.log(\"clearList\");\n};\n//**********************************\n//***********updateTask\n//**********************************\nexport const updateTask = (\n  token,\n  id,\n  user,\n  title,\n  date,\n  description,\n  status\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ title, date, description, status });\n  try {\n    const res = await axios.patch(\"/api/task/\" + id, body, config);\n    console.log(\"updateTask\");\n    dispatch(getAllTasks(user));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Update Task\", \"danger\"));\n  }\n};\n//**********************************\n//***********deleteTask\n//**********************************\nexport const deleteTask = (token, id, user) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  try {\n    const res = await axios.delete(\"/api/task/\" + id, config);\n    console.log(\"deleteTask\");\n    dispatch(getAllTasks(user));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Delete Task\", \"danger\"));\n  }\n};\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":11,"column":8,"nodeType":"118","messageId":"119","endLine":11,"endColumn":14},{"ruleId":"120","severity":1,"message":"121","line":79,"column":42,"nodeType":"122","messageId":"123","endLine":79,"endColumn":44},{"ruleId":"124","severity":1,"message":"125","line":5,"column":1,"nodeType":"126","endLine":17,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":16,"column":1,"nodeType":"126","endLine":51,"endColumn":2},{"ruleId":"124","severity":1,"message":"125","line":3,"column":1,"nodeType":"126","endLine":30,"endColumn":2},{"ruleId":"116","severity":1,"message":"127","line":15,"column":11,"nodeType":"118","messageId":"119","endLine":15,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":6,"column":1,"nodeType":"126","endLine":28,"endColumn":2},{"ruleId":"116","severity":1,"message":"128","line":37,"column":11,"nodeType":"118","messageId":"119","endLine":37,"endColumn":19},{"ruleId":"120","severity":1,"message":"129","line":37,"column":42,"nodeType":"122","messageId":"130","endLine":37,"endColumn":44},{"ruleId":"131","severity":1,"message":"132","line":86,"column":7,"nodeType":"118","messageId":"133","endLine":86,"endColumn":11},{"ruleId":"116","severity":1,"message":"127","line":96,"column":11,"nodeType":"118","messageId":"119","endLine":96,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":133,"column":11,"nodeType":"118","messageId":"119","endLine":133,"endColumn":14},{"ruleId":"116","severity":1,"message":"127","line":152,"column":11,"nodeType":"118","messageId":"119","endLine":152,"endColumn":14},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Select' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'res' is assigned a value but never used.","'userTask' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-redeclare","'date' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]