[{"/home/ihtisham/PycharmProjects/test/client/src/index.js":"1","/home/ihtisham/PycharmProjects/test/client/src/App.js":"2","/home/ihtisham/PycharmProjects/test/client/src/store.js":"3","/home/ihtisham/PycharmProjects/test/client/src/utils/setAuthToken.js":"4","/home/ihtisham/PycharmProjects/test/client/src/actions/auth.js":"5","/home/ihtisham/PycharmProjects/test/client/src/components/routering/PrivateRoute.js":"6","/home/ihtisham/PycharmProjects/test/client/src/components/Login.jsx":"7","/home/ihtisham/PycharmProjects/test/client/src/components/Body.jsx":"8","/home/ihtisham/PycharmProjects/test/client/src/components/Register.jsx":"9","/home/ihtisham/PycharmProjects/test/client/src/actions/types.js":"10","/home/ihtisham/PycharmProjects/test/client/src/utils/proxy.js":"11","/home/ihtisham/PycharmProjects/test/client/src/actions/alert.js":"12","/home/ihtisham/PycharmProjects/test/client/src/components/routering/Alert.js":"13","/home/ihtisham/PycharmProjects/test/client/src/actions/user.js":"14","/home/ihtisham/PycharmProjects/test/client/src/actions/task.js":"15","/home/ihtisham/PycharmProjects/test/client/src/components/List.jsx":"16","/home/ihtisham/PycharmProjects/test/client/src/reducers/index.js":"17","/home/ihtisham/PycharmProjects/test/client/src/components/AddReminderModel.jsx":"18","/home/ihtisham/PycharmProjects/test/client/src/components/Addlistmodel.jsx":"19","/home/ihtisham/PycharmProjects/test/client/src/reducers/alert.js":"20","/home/ihtisham/PycharmProjects/test/client/src/reducers/auth.js":"21","/home/ihtisham/PycharmProjects/test/client/src/reducers/user.js":"22","/home/ihtisham/PycharmProjects/test/client/src/reducers/task.js":"23","/home/ihtisham/PycharmProjects/test/client/src/utils/dateFunction.js":"24","/home/ihtisham/PycharmProjects/test/client/src/components/DisplayTasks.jsx":"25","/home/ihtisham/PycharmProjects/test/client/src/components/Tasks.jsx":"26","/home/ihtisham/PycharmProjects/test/client/src/components/CheckBox.jsx":"27","/home/ihtisham/PycharmProjects/test/client/src/components/header.jsx":"28","/home/ihtisham/PycharmProjects/test/client/src/components/SearchResult.jsx":"29","/home/ihtisham/PycharmProjects/test/client/src/components/SearchItem.jsx":"30","/home/ihtisham/PycharmProjects/test/client/src/components/TodayTask.jsx":"31","/home/ihtisham/PycharmProjects/test/client/src/components/ScheduledTask.jsx":"32","/home/ihtisham/PycharmProjects/test/client/src/components/EditTask.jsx":"33"},{"size":168,"mtime":1610377164718,"results":"34","hashOfConfig":"35"},{"size":1767,"mtime":1611651056497,"results":"36","hashOfConfig":"35"},{"size":987,"mtime":1611303670443,"results":"37","hashOfConfig":"35"},{"size":242,"mtime":1610377148330,"results":"38","hashOfConfig":"35"},{"size":1347,"mtime":1611572713465,"results":"39","hashOfConfig":"35"},{"size":571,"mtime":1610977098573,"results":"40","hashOfConfig":"35"},{"size":4284,"mtime":1610985509574,"results":"41","hashOfConfig":"35"},{"size":9735,"mtime":1611655667080,"results":"42","hashOfConfig":"35"},{"size":4064,"mtime":1610985536751,"results":"43","hashOfConfig":"35"},{"size":409,"mtime":1610377148290,"results":"44","hashOfConfig":"35"},{"size":117,"mtime":1611592617798,"results":"45","hashOfConfig":"35"},{"size":338,"mtime":1610460633404,"results":"46","hashOfConfig":"35"},{"size":559,"mtime":1610982581607,"results":"47","hashOfConfig":"35"},{"size":2274,"mtime":1611316680412,"results":"48","hashOfConfig":"35"},{"size":7315,"mtime":1611655236569,"results":"49","hashOfConfig":"35"},{"size":2106,"mtime":1611589226958,"results":"50","hashOfConfig":"35"},{"size":232,"mtime":1610377148302,"results":"51","hashOfConfig":"35"},{"size":7389,"mtime":1611657067519,"results":"52","hashOfConfig":"35"},{"size":3587,"mtime":1611656050034,"results":"53","hashOfConfig":"35"},{"size":418,"mtime":1611572598488,"results":"54","hashOfConfig":"35"},{"size":879,"mtime":1610461255257,"results":"55","hashOfConfig":"35"},{"size":1042,"mtime":1611316680440,"results":"56","hashOfConfig":"35"},{"size":3857,"mtime":1611654573595,"results":"57","hashOfConfig":"35"},{"size":83,"mtime":1610377164746,"results":"58","hashOfConfig":"35"},{"size":8117,"mtime":1611651343635,"results":"59","hashOfConfig":"35"},{"size":3626,"mtime":1611655780234,"results":"60","hashOfConfig":"35"},{"size":1380,"mtime":1611131408404,"results":"61","hashOfConfig":"35"},{"size":3049,"mtime":1611573553250,"results":"62","hashOfConfig":"35"},{"size":1829,"mtime":1611588280582,"results":"63","hashOfConfig":"35"},{"size":2313,"mtime":1611588156281,"results":"64","hashOfConfig":"35"},{"size":4844,"mtime":1611587316686,"results":"65","hashOfConfig":"35"},{"size":3929,"mtime":1611571522799,"results":"66","hashOfConfig":"35"},{"size":7161,"mtime":1611657264851,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"y9aadk",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"70"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"70"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ihtisham/PycharmProjects/test/client/src/index.js",[],["143","144"],"/home/ihtisham/PycharmProjects/test/client/src/App.js",[],"/home/ihtisham/PycharmProjects/test/client/src/store.js",[],"/home/ihtisham/PycharmProjects/test/client/src/utils/setAuthToken.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/auth.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/routering/PrivateRoute.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Login.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Body.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/Register.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/types.js",[],"/home/ihtisham/PycharmProjects/test/client/src/utils/proxy.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/alert.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/routering/Alert.js",[],"/home/ihtisham/PycharmProjects/test/client/src/actions/user.js",["145","146"],"import axios from \"axios\";\nimport { CREATED_USER, FAILED_USER } from \"./types\";\nimport { setAlert } from \"./alert\";\nimport { login } from \"./auth\";\nimport { url } from \"../utils/proxy\";\n\n//**********************************\n//***********createUser\n//**********************************\nexport const createUser = (name, email, password) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post(url + \"/api/user/add\", body, config);\n    dispatch({\n      type: CREATED_USER,\n    });\n    dispatch(setAlert(\"User Created\", \"success\"));\n    dispatch(login(email, password));\n  } catch (error) {\n    dispatch({\n      type: FAILED_USER,\n    });\n    dispatch(setAlert(\"Failed To Create User\", \"error\"));\n  }\n};\n\n//**********************************\n//***********updateUser\n//**********************************\n\nexport const updateUser = (id, token, name, email, password, image) => async (\n  dispatch\n) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ name, email, password, image });\n\n  try {\n    const res = await axios.patch(url + \"/api/user/\" + id, body, config);\n    console.log(\"updateUser\");\n    dispatch(setAlert(\"User Updated\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Updated\", \"error\"));\n  }\n};\n\n//**********************************\n//***********editClick\n//**********************************\nexport const editClick = (edit) => async (dispatch) => {\n  if (edit === true) {\n    dispatch({\n      type: \"EDIT_OFF\",\n    });\n  } else {\n    dispatch({\n      type: \"EDIT_ON\",\n    });\n  }\n};\n//**********************************\n//***********editClickDot\n//**********************************\nexport const editClickDot = (edit) => async (dispatch) => {\n  if (edit === true) {\n    dispatch({\n      type: \"EDITLIST_OFF\",\n    });\n  } else {\n    dispatch({\n      type: \"EDITLIST_ON\",\n    });\n  }\n};\n//**********************************\n//***********editClickDot\n//**********************************\nexport const setcheckData = () => async (dispatch) => {\n  dispatch({\n    type: \"CHECKDATA\",\n  });\n};\n","/home/ihtisham/PycharmProjects/test/client/src/actions/task.js",["147","148","149","150","151","152"],"import axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { url } from \"../utils/proxy\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\n//**********************************\n//***********addList\n//**********************************\nexport const addList = (token, listName) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ listName });\n  try {\n    const res = await axios.post(url + \"/api/task/add_list\", body, config);\n\n    dispatch({\n      type: \"ADD_LIST\",\n      payload: res.data,\n    });\n    dispatch(setAlert(\"List added\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Add List\", \"error\"));\n  }\n};\n//**********************************\n//***********deleteList\n//**********************************\nexport const deleteList = (token, listID) => async (dispatch) => {\n  dispatch({\n    type: \"REMOVE_LIST\",\n    payload: listID,\n  });\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  try {\n    const res = await axios.delete(\n      url + \"/api/task/delete_list/\" + listID,\n      config\n    );\n    dispatch(setAlert(\"List deleted\", \"success\"));\n  } catch (error) {\n    dispatch(setAlert(\"Failed To delete List\", \"error\"));\n  }\n};\n//**********************************\n//***********getData\n//**********************************\nexport const getData = (token) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  try {\n    const res = await axios.get(url + \"/api/task/get_lists\", config);\n\n    dispatch({\n      type: \"GET_All_TASKS\",\n      payload: res.data,\n    });\n    dispatch(getNumbers(res.data));\n  } catch (e) {\n    dispatch(setAlert(\"Failed To Get data\", \"error\"));\n  }\n};\n\n//**********************************\n//***********addTask\n//**********************************\nexport const addTask = (\n  token,\n  listId,\n  date,\n  title,\n  description,\n  checkedId = null,\n  listData = null,\n  status = \"false\"\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n  const body = JSON.stringify({ listId, date, title, description, status });\n\n  try {\n    const res = await axios.post(url + \"/api/task/\", body, config);\n\n    dispatch({\n      type: \"ADD_TASK\",\n      payload: { listId, data: res.data },\n    });\n\n    if (checkedId === listId) {\n      dispatch({\n        type: \"UPDATE_CLICKEDTASKLIST\",\n        payload: res.data,\n      });\n    }\n\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Add Task\", \"error\"));\n  }\n};\n\n//**********************************\n//***********deleteTask\n//**********************************\nexport const deleteTask = (token, listId, taskId) => async (dispatch) => {\n  dispatch({\n    type: \"REMOVE_TASK\",\n    payload: {\n      listId,\n      taskId,\n    },\n  });\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  try {\n    const res = await axios.delete(\n      url + \"/api/task/\" + listId + \"/\" + taskId,\n      config\n    );\n  } catch (error) {\n    dispatch(setAlert(\"Failed To Delete Task\", \"error\"));\n  }\n};\n\n//**********************************\n//***********handleClicked\n//**********************************\nexport const handleClicked = (ListId, ListData) => async (dispatch) => {\n  dispatch({\n    type: \"CLICKED\",\n    payload: ListId,\n  });\n  var data;\n  ListData.map((list) => {\n    if (list._id === ListId) {\n      data = {\n        label: list.listName,\n        displayTask: list.taskList,\n      };\n    }\n  });\n  dispatch({\n    type: \"LOAD_CLICKED_LIST_TASK\",\n    payload: data,\n  });\n};\n//**********************************\n//***********loadTaskList\n//**********************************\nexport const loadTaskList = (ListId, ListData) => async (dispatch) => {\n  var data;\n  ListData.map((list) => {\n    if (list._id === ListId) {\n      data = {\n        label: list.listName,\n        displayTask: list.taskList,\n      };\n    }\n  });\n  dispatch({\n    type: \"LOAD_CLICKED_LIST_TASK\",\n    payload: data,\n  });\n};\n\n//**********************************\n//***********getNumbers\n//**********************************\nexport const getNumbers = (taskList) => async (dispatch) => {\n  var sd = 0;\n  var selectedDateNTime = getCurrentDate();\n  // Scheduled\n  taskList.map((l) => {\n    return l.taskList.map((t) => {\n      const dts = new Date(t.date);\n      if (selectedDateNTime.getFullYear() <= dts.getFullYear()) {\n        if (selectedDateNTime.getMonth() <= dts.getMonth()) {\n          if (selectedDateNTime.getDate() < dts.getDate()) {\n            sd = sd + 1;\n          }\n        }\n      }\n    });\n  });\n  var td = 0;\n  //today\n  taskList.map((l) => {\n    return l.taskList.map((t) => {\n      const dts = new Date(t.date);\n      if (\n        selectedDateNTime.getDate() === dts.getDate() &&\n        selectedDateNTime.getMonth() === dts.getMonth() &&\n        selectedDateNTime.getFullYear() === dts.getFullYear()\n      ) {\n        td = td + 1;\n      }\n    });\n  });\n\n  const payload = {\n    td,\n    sd,\n  };\n  dispatch({\n    type: \"SET_NUMBERS\",\n    payload,\n  });\n};\n//**********************************\n//***********handleClicked\n//**********************************\nexport const handleUnClicked = () => async (dispatch) => {\n  dispatch({\n    type: \"UNCLICKED\",\n  });\n};\n\n//**********************************\n//***********statusChange\n//**********************************\nexport const statusChange = (token, listId, taskId) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  try {\n    const res = await axios.patch(\n      url + \"/api/task/status/\" + listId + \"/\" + taskId,\n      config\n    );\n    dispatch({\n      type: \"STATUS_CHANGE\",\n      payload: {\n        listId,\n        data: res.data,\n      },\n    });\n  } catch (error) {\n    dispatch(setAlert(\"Failed To update Task\", \"error\"));\n  }\n};\n//**********************************\n//***********clickedTask\n//**********************************\nexport const clickedTask = (data) => async (dispatch) => {\n  dispatch({\n    type: \"CLICKED_TASK\",\n    payload: data,\n  });\n};\n//**********************************\n//***********unClickedTask\n//**********************************\nexport const unClickedTask = () => async (dispatch) => {\n  dispatch({\n    type: \"UNCLICKED_TASK\",\n  });\n};\n\n//**********************************\n//***********unClickedTask\n//**********************************\nexport const updateTask = (\n  token,\n  listId,\n  taskId,\n  date,\n  title,\n  description,\n  status\n) => async (dispatch) => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-auth-token\": token,\n    },\n  };\n\n  const body = JSON.stringify({ date, title, description, status });\n  try {\n    const res = await axios.patch(\n      url + \"/api/task/update_list/\" + listId + \"/\" + taskId,\n      body,\n      config\n    );\n    console.log(res.data);\n    dispatch({\n      type: \"UPDATE_TASK\",\n      payload: {\n        listId,\n        data: res.data,\n      },\n    });\n  } catch (error) {\n    dispatch(setAlert(\"Failed To update Task\", \"error\"));\n  }\n};\n","/home/ihtisham/PycharmProjects/test/client/src/components/List.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/reducers/index.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/AddReminderModel.jsx",["153"],"/home/ihtisham/PycharmProjects/test/client/src/components/Addlistmodel.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/reducers/alert.js",["154"],"import { REMOVE_ALERT, SET_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n\n    case \"CLEAR_ALERTS\":\n      return [];\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/auth.js",["155"],"import {\n  AUTH_ERROR,\n  LOGIN_FAIL,\n  LOGIN_SUCCESS,\n  LOGOUT,\n  USER_LOADED,\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: '',\n  user: '',\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", payload.token);\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        usertype: payload.usertype,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n      };\n\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        user: payload,\n      };\n\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/user.js",["156","157"],"import { AUTH_ERROR, LOGIN_FAIL, LOGOUT } from \"../actions/types\";\n\nconst initialState = {\n  loading: false,\n  editList: false,\n  editTask: false,\n  checkData: false,\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n  //action has the coming data init\n  switch (type) {\n    case \"EDIT_ON\":\n      return {\n        ...state,\n        editList: true,\n      };\n    case \"EDIT_OFF\":\n      return {\n        ...state,\n        editList: false,\n      };\n    case \"EDITLIST_ON\":\n      return {\n        ...state,\n        editTask: true,\n      };\n    case \"EDITLIST_OFF\":\n      return {\n        ...state,\n        editTask: false,\n      };\n    case \"CHECKDATA\":\n      return {\n        ...state,\n        checkData: true,\n      };\n    case \"SET_LOADING\":\n      return {\n        ...state,\n        loading: true,\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT:\n      return {\n        ...state,\n        loading: false,\n        checkData: false,\n      };\n    default:\n      return state;\n  }\n}\n","/home/ihtisham/PycharmProjects/test/client/src/reducers/task.js",["158"],"/home/ihtisham/PycharmProjects/test/client/src/utils/dateFunction.js",[],"/home/ihtisham/PycharmProjects/test/client/src/components/DisplayTasks.jsx",["159","160"],"/home/ihtisham/PycharmProjects/test/client/src/components/Tasks.jsx",["161","162","163"],"/home/ihtisham/PycharmProjects/test/client/src/components/CheckBox.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/header.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/SearchResult.jsx",["164"],"import React, { Component, createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchItem from \"./SearchItem\";\nimport { v4 as uuid } from \"uuid\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  left: 0;\n  background-color: none;\n  z-index: 100;\n`;\nconst Body = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 16vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 70.5vh;\n  background: #111;\n  margin: 20vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\n\nexport class SearchResult extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      modalRef: createRef(),\n    };\n  }\n\n  closeModal(e) {\n    if (this.state.modalRef.current === e.target) {\n      this.props.onClose();\n    }\n  }\n  render() {\n    if (!this.props.open) return null;\n    return (\n      <Overlay ref={this.state.modalRef} onClick={(e) => this.closeModal(e)}>\n        <Body>\n          {this.props.searchText === \"\" ? (\n            <div />\n          ) : (\n            this.props.taskData.map((l) => {\n              return l.taskList.map((t) => {\n                if (t.title.includes(this.props.searchText)) {\n                  return (\n                    <SearchItem\n                      key={uuid()}\n                      listName={l.listName}\n                      taskName={t.title}\n                      status={t.status}\n                      list={l._id}\n                      id={t._id}\n                    />\n                  );\n                }\n              });\n            })\n          )}\n        </Body>\n      </Overlay>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {};\n}\n\nexport default connect(mapStateToProps)(SearchResult);\n","/home/ihtisham/PycharmProjects/test/client/src/components/SearchItem.jsx",[],"/home/ihtisham/PycharmProjects/test/client/src/components/TodayTask.jsx",["165","166"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Header from \"./header\";\nimport { FaLessThan } from \"react-icons/fa\";\nimport Tasks from \"./Tasks\";\nimport { v4 as uuid } from \"uuid\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\nconst BodyStyle = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 2vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 77vh;\n  background: #111;\n  margin: 5vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\nconst ContainBtn = styled.div`\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n  margin-bottom: 1vh;\n`;\nconst AddRem = styled.div`\n  border: none;\n  background-color: transparent;\n  color: #2d62f3;\n  font-size: 1.5vh;\n  margin-left: 0.5vh;\n`;\nconst RemIcon = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 2vh;\n  border-radius: 4vh;\n  margin: 0;\n  color: #2d62f3;\n`;\n\nconst AddandREM = styled.div`\n  &:hover {\n    opacity: 0.7;\n  }\n  cursor: pointer;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n`;\nconst BackTitleContain = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 0.5vh;\n  width: 100%;\n`;\nconst ContainBackList = styled.div`\n  display: flex;\n  cursor: pointer;\n  margin: auto auto 0 0.5vh;\n  align-items: center;\n`;\nconst BackBTN = styled.div`\n  color: #4271f1;\n  margin-top: 0.4vh;\n  margin-right: 0.8vh;\n  font-size: 2vh;\n`;\nconst ListTitle = styled.h3`\n  color: #2d62f3;\n  font-size: 2.2vh;\n`;\nconst ListName = styled.h1`\n  margin: 0 0 0 1.5vh;\n  color: #2d62f3;\n  font-size: 4.5vh;\n`;\nconst TaskList = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2vh 0 0 0.2vh;\n  padding: 0.3vh;\n  overflow: scroll;\n  scrollbar-width: none;\n`;\n\nexport class TodayTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TodayDate: getCurrentDate(),\n    };\n  }\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <BodyStyle>\n          <BackTitleContain>\n            <ContainBackList\n              onClick={() => {\n                this.routeChange(`/todolist`);\n              }}\n            >\n              <BackBTN>\n                <FaLessThan />\n              </BackBTN>\n              <ListTitle>Lists</ListTitle>\n            </ContainBackList>\n          </BackTitleContain>\n          <ListName>Todays</ListName>\n          <TaskList>\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (\n                  this.state.TodayDate.getDate() === dts.getDate() &&\n                  this.state.TodayDate.getMonth() === dts.getMonth() &&\n                  this.state.TodayDate.getFullYear() === dts.getFullYear()\n                ) {\n                  if (t.status === \"false\")\n                    return (\n                      <Tasks\n                        key={uuid()}\n                        id={t._id}\n                        date={t.date}\n                        title={t.title}\n                        description={l.listName}\n                        status={t.status}\n                        list={l._id}\n                      />\n                    );\n                }\n              });\n            })}\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (\n                  this.state.TodayDate.getDate() === dts.getDate() &&\n                  this.state.TodayDate.getMonth() === dts.getMonth() &&\n                  this.state.TodayDate.getFullYear() === dts.getFullYear()\n                ) {\n                  if (t.status === \"true\")\n                    return (\n                      <Tasks\n                        key={uuid()}\n                        id={t._id}\n                        date={t.date}\n                        title={t.title}\n                        description={l.listName}\n                        status={t.status}\n                        list={l._id}\n                      />\n                    );\n                }\n              });\n            })}\n          </TaskList>\n\n          <ContainBtn>\n            <AddandREM>\n              <RemIcon>\n                <IoMdAddCircle />\n              </RemIcon>\n              <AddRem onClick={() => this.routeChange(`/addrem`)}>\n                New Reminder\n              </AddRem>\n            </AddandREM>\n          </ContainBtn>\n        </BodyStyle>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    displayTask: state.task.taskList,\n  };\n}\n\nexport default connect(mapStateToProps)(TodayTask);\n","/home/ihtisham/PycharmProjects/test/client/src/components/ScheduledTask.jsx",["167"],"import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\nimport Header from \"./header\";\nimport { FaLessThan } from \"react-icons/fa\";\nimport Tasks from \"./Tasks\";\nimport { v4 as uuid } from \"uuid\";\nimport { IoMdAddCircle } from \"react-icons/io\";\nimport { getCurrentDate } from \"../utils/dateFunction\";\n\nconst BodyStyle = styled.div`\n  @media (max-width: 400px) {\n    width: auto;\n    margin: 2vh 1vh 0 1vh;\n  }\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  width: 50vh;\n  height: 77vh;\n  background: #111;\n  margin: 5vh auto;\n  border-radius: 1vh;\n  padding: 1.5vh;\n`;\nconst ContainBtn = styled.div`\n  display: flex;\n  margin-top: auto;\n  width: 100%;\n  margin-bottom: 1vh;\n`;\nconst AddRem = styled.div`\n  border: none;\n  background-color: transparent;\n  color: #cf2727;\n  font-size: 1.5vh;\n  margin-left: 0.5vh;\n`;\nconst RemIcon = styled.div`\n  display: flex;\n  align-self: center;\n  font-size: 2vh;\n  border-radius: 4vh;\n  margin: 0;\n  color: #cf2727;\n`;\n\nconst AddandREM = styled.div`\n  &:hover {\n    opacity: 0.7;\n  }\n  cursor: pointer;\n  display: flex;\n  align-self: flex-start;\n  align-items: center;\n`;\nconst BackTitleContain = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 0.5vh;\n  width: 100%;\n`;\nconst ContainBackList = styled.div`\n  display: flex;\n  cursor: pointer;\n  margin: auto auto 0 0.5vh;\n  align-items: center;\n`;\n\nconst BackBTN = styled.div`\n  color: #cf2727;\n  margin-top: 0.4vh;\n  margin-right: 0.8vh;\n  font-size: 2vh;\n`;\nconst ListTitle = styled.h3`\n  color: #cf2727;\n  font-size: 2.2vh;\n`;\nconst ListName = styled.h1`\n  margin: 0 0 0 1.5vh;\n  color: #cf2727;\n  font-size: 4.5vh;\n`;\nconst TaskList = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 2vh 0 0 0.2vh;\n  padding: 0.3vh;\n  overflow: scroll;\n  scrollbar-width: none;\n`;\nexport class ScheduledTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      TodayDate: getCurrentDate(),\n    };\n  }\n  routeChange(path) {\n    this.props.history.push(path);\n  }\n  render() {\n    return (\n      <div>\n        <Header />\n        <BodyStyle>\n          <BackTitleContain>\n            <ContainBackList\n              onClick={() => {\n                this.routeChange(`/todolist`);\n              }}\n            >\n              <BackBTN>\n                <FaLessThan />\n              </BackBTN>\n              <ListTitle>Lists</ListTitle>\n            </ContainBackList>\n          </BackTitleContain>\n          <ListName>Scheduled</ListName>\n          <TaskList>\n            {this.props.displayTask.map((l) => {\n              return l.taskList.map((t) => {\n                const dts = new Date(t.date);\n                if (this.state.TodayDate.getFullYear() <= dts.getFullYear()) {\n                  if (this.state.TodayDate.getMonth() <= dts.getMonth()) {\n                    if (this.state.TodayDate.getDate() < dts.getDate()) {\n                      return (\n                        <Tasks\n                          key={uuid()}\n                          id={t._id}\n                          date={t.date}\n                          title={t.title}\n                          description={l.listName}\n                          status={t.status}\n                        />\n                      );\n                    }\n                  }\n                }\n              });\n            })}\n          </TaskList>\n\n          <ContainBtn>\n            <AddandREM>\n              <RemIcon>\n                <IoMdAddCircle />\n              </RemIcon>\n              <AddRem onClick={() => this.routeChange(`/addrem`)}>\n                New Reminder\n              </AddRem>\n            </AddandREM>\n          </ContainBtn>\n        </BodyStyle>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    displayTask: state.task.taskList,\n  };\n}\n\nexport default connect(mapStateToProps)(ScheduledTask);\n","/home/ihtisham/PycharmProjects/test/client/src/components/EditTask.jsx",[],{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":19,"column":11,"nodeType":"174","messageId":"175","endLine":19,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":49,"column":11,"nodeType":"174","messageId":"175","endLine":49,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":45,"column":11,"nodeType":"174","messageId":"175","endLine":45,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":137,"column":11,"nodeType":"174","messageId":"175","endLine":137,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":155,"column":23,"nodeType":"178","messageId":"179","endLine":155,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":173,"column":23,"nodeType":"178","messageId":"179","endLine":173,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":195,"column":31,"nodeType":"178","messageId":"179","endLine":195,"endColumn":33},{"ruleId":"176","severity":1,"message":"177","line":209,"column":31,"nodeType":"178","messageId":"179","endLine":209,"endColumn":33},{"ruleId":"172","severity":1,"message":"180","line":24,"column":10,"nodeType":"174","messageId":"175","endLine":24,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":5,"column":1,"nodeType":"183","endLine":19,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":15,"column":1,"nodeType":"183","endLine":47,"endColumn":2},{"ruleId":"181","severity":1,"message":"182","line":10,"column":1,"nodeType":"183","endLine":56,"endColumn":2},{"ruleId":"172","severity":1,"message":"184","line":11,"column":17,"nodeType":"174","messageId":"175","endLine":11,"endColumn":24},{"ruleId":"181","severity":1,"message":"182","line":10,"column":1,"nodeType":"183","endLine":161,"endColumn":2},{"ruleId":"176","severity":1,"message":"185","line":261,"column":53,"nodeType":"178","messageId":"186","endLine":261,"endColumn":55},{"ruleId":"176","severity":1,"message":"185","line":276,"column":53,"nodeType":"178","messageId":"186","endLine":276,"endColumn":55},{"ruleId":"172","severity":1,"message":"187","line":8,"column":27,"nodeType":"174","messageId":"175","endLine":8,"endColumn":33},{"ruleId":"172","severity":1,"message":"188","line":8,"column":35,"nodeType":"174","messageId":"175","endLine":8,"endColumn":40},{"ruleId":"172","severity":1,"message":"189","line":8,"column":42,"nodeType":"174","messageId":"175","endLine":8,"endColumn":48},{"ruleId":"176","severity":1,"message":"185","line":54,"column":41,"nodeType":"178","messageId":"186","endLine":54,"endColumn":43},{"ruleId":"176","severity":1,"message":"185","line":123,"column":41,"nodeType":"178","messageId":"186","endLine":123,"endColumn":43},{"ruleId":"176","severity":1,"message":"185","line":146,"column":41,"nodeType":"178","messageId":"186","endLine":146,"endColumn":43},{"ruleId":"176","severity":1,"message":"185","line":123,"column":41,"nodeType":"178","messageId":"186","endLine":123,"endColumn":43},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Grid' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'payload' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","no-global-assign","no-unsafe-negation"]